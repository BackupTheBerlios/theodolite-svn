Theodolite Installation
=======================

These are the steps to install the system.  Naturally, you need 
permissions, and there needs to be a system user account on PostgreSQL for 
your web daemon (e.g., the "apache" that is granted permission in 
the theo_create.sql file below).

For software, I use psycopg to connect PostgreSQL and Python, so you need
to have that installed.

0) Create a database.  Include the user that you will run as (I use
  'ftpmaint' for this), and the user that your web daemon runs as (I
  use 'apache').
    createdb -e -E utf-8 theo
  Adjust the user names in the .sql files to reflect the names that you have
  chosen for these users.

1) Put the theo files someplace.  You can put them below your web daemon's
cgi-bin directory.  Personally, I prefer to put them somewhere else
  mkdir /home/svn/theodolite/trunk
  <put the files under there>
It must be someplace that your web daemon can read.  Then I make a soft link 
between the .py files under theo and the web server's cgi-bin directory.  
  EX: mkdir /var/www/cgi-bin/theo
      ln -s /home/svn/theoolite/trunk/cgi-bin/*.py /var/www/cgi-bin/theo
You may need to correct the #! line in each executable file.  

Also, I make a soft link to the theo index page
  EX: mkdir /var/www/html/theo
      ln -s /home/svn/theodolite/trunk/html/index.html /var/www/html/theo/index.html
and adjust the link in cgi-bin/cgiUtils.py's page_footer() function linking
to that index file. 

2) Make a cgi-bin/library.py file 
  cd cgi-bin
  cp library_model.py library.py
  emacs library.py
and change the contents to point to your theo/bin directory.

3) Make a bin/defaults.py file
  cd bin
  cp defaults_model.py defaults.py
  emacs defaults.py
In particular, change the string called SEPARATOR by choosing your own wacky 
characters; this makes your subject ID's more secure. Also change the
WEB_DEMON_NAME entry to match what you did in step (0).

4) Run aux/postInstall.py to make the .sql files reflect the name of the 
web demon that will access the database, and then run the .sql files.
  cd aux
  ./postInstall.py

5) Run the sql files
      cd ../sql
      psql -a -f theo_drop.sql theo
      psql -a -f theo_create.sql theo
      psql -a -f theo_stock.sql theo

(The "drop" file is for deleting old material and starting over, and the
"debug" file is development.)  




Theodolite running
==================

1) Whenever you need to mail out the email notices, run the bin/mails.py 
script.  Probably it is best to make this a cron job and run it shortly
after midnight each night.




Closing
=======

I would appreciate corrections or additions.

Jim Hefferon
St Michael's College
2004-Oct-12
jhefferon@smcvt.edu  
